"""add relationships with string ids

Revision ID: e3bdf705736d
Revises: 7cc576010395
Create Date: 2024-10-01 22:20:24.813954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e3bdf705736d'
down_revision: Union[str, None] = '7cc576010395'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('OrderItem', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)
    op.alter_column('OrderItem', 'order_id',
               existing_type=sa.INTEGER(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)
    op.alter_column('OrderItem', 'product_id',
               existing_type=sa.INTEGER(),
               type_=sa.VARCHAR(length=5),
               existing_nullable=False)
    op.create_foreign_key(None, 'OrderItem', 'Product', ['product_id'], ['id'])
    op.create_foreign_key(None, 'OrderItem', 'Order', ['order_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'OrderItem', type_='foreignkey')
    op.drop_constraint(None, 'OrderItem', type_='foreignkey')
    op.alter_column('OrderItem', 'product_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('OrderItem', 'order_id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('OrderItem', 'id',
               existing_type=sa.VARCHAR(length=5),
               type_=sa.INTEGER(),
               existing_nullable=False)
    # ### end Alembic commands ###
